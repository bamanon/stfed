from PySide6 import QtCore, QtGui, QtWidgets

from stfed.view.autogenerated.Ui_PreferencesWindow import Ui_PreferencesWindow
from stfed.repos.user_preferences import repo as user_preferences_repo
import stfed.model.user_preferences

class PreferencesWindow(QtWidgets.QWidget, Ui_PreferencesWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)
        # sizePolicy.xxxPolicy.Fixed apparently does nothing
        self.setFixedSize(self.size())
        
        user_preferences = user_preferences_repo.get()
        self.lookup_paths_edit.setText(";".join(user_preferences.lookup_paths))
        self.double_width_export_checkbox.setChecked(user_preferences.double_width_image_export)
        self.double_width_preview_checkbox.setChecked(user_preferences.double_width_image_preview)

        self.cancel_button.clicked.connect(self.__cancel_button_clicked)
        self.apply_button.clicked.connect(self.__apply_button_clicked)


    def __cancel_button_clicked(self):
        self.close()


    def __apply_button_clicked(self):
        current = user_preferences_repo.get()
        updated = stfed.model.user_preferences.UserPreferences(
            [
                p.strip()
                for p in self.lookup_paths_edit.text().split(';')
                if len(p.strip()) > 0
            ],
            current.recent_files,
            self.double_width_preview_checkbox.isChecked(),
            self.double_width_export_checkbox.isChecked())
        user_preferences_repo.update(updated)
        self.close()


    def keyPressEvent(self, event: QtGui.QKeyEvent) -> None:
        if event.key() == QtGui.Qt.Key.Key_Escape:
            self.close()
            return
        return super().keyPressEvent(event)