import wave
import io

from PySide6 import QtCore, QtGui, QtWidgets

import stfed.model
import stfed.services.player
import stfed.factories.wav
from stfed.view.autogenerated.Ui_WavResourcePreview import Ui_WavResourcePreview


class WavResourcePreview(QtWidgets.QWidget, Ui_WavResourcePreview):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.__data: bytes|None = None
        self.play_button.clicked.connect(self.__play_clicked)


    def set_model(self, resource: stfed.model.Resource):
        self.__data = resource.data()
        temp_file = io.BytesIO(self.__data)
        with wave.open(temp_file, 'rb') as wave_file:
            params = wave_file.getparams()
            duration = params.nframes / params.framerate
            msecs = int(duration % 1 * 1000)
            duration = int(duration) 
            mins = duration // 60
            secs = duration % 60
            duration_formatted = f"{mins:02}:{secs:02}.{msecs:03}"
            metadata_formatted = f"""Compression: {params.compname}
Channels: {params.nchannels}
Sample width: {params.sampwidth}
Framerate: {params.framerate}
Frames: {params.nframes}
Duration: {duration_formatted}"""
            self.metadata_label.setText(metadata_formatted)

        preview_bytes = stfed.factories.wav.export_preview(self.__data)
        pixmap = QtGui.QPixmap()
        pixmap.loadFromData(preview_bytes, 'PNG')
        self.preview_image.setPixmap(pixmap)

    def __play_clicked(self):
        stfed.services.player.start(self.__data)